install.packages("dplyr")
library(dplyr)
# Read Data
setwd("C:/Users/ompra/Documents/Project/RPXFlows/data")
library(openxlsx)
TData <- read.xlsx("Test1_AllData.xlsx")
nRows <- nrow(TData)
head(TData)
setwd("C:/Users/ompra/Documents/Project/RPXFlows/data")
library(openxlsx)
TData <- read.xlsx("ModelDataSet.xlsx")
nRows <- nrow(TData)
head(TData)
# Read Data
pwd
setwd("C:/users/ompra/documents/UCBcourses/Datascience/csx415-Project")
library('ProjectTemplate')
load.project()
# Read Data
TData <- FlowImbalanceTestData.LP.HP.p125
#Shuffle Data
SData <- TData[sample(nrow(TData)),]
#Split Shuffled Data into training data, validation data & test data
TrgData <- SData[1:(0.6*nrow(SData)),]
ValData <- SData[(0.6*nrow(SData)):(0.8*nrow(SData)),]
TstData <- SData[(0.8*nrow(SData)):nrow(SData),]
#Build histogram of response variable - Erosion Potential
ggplot(data=TrgData,aes(x=ErosionPotential)) +
geom_histogram(binwidth=0.02,fill="Magenta",color="Black")
#Build a Naive Model to predict Erosion Potential
#Take the mean
ErPot_Naive = mean(TrgData$ErosionPotential)
getwd()
source('./src/Naive_model.R')
---
title: "ProjectPerformance"
author: "Omprakash Samudrala"
date: "May 8, 2018"
output: html_document
---
```{r }
knitr::opts_chunk$set(echo = FALSE)
```
# Load the Naive Model
```{r }
library(knitr)
source('./src/Naive_model.R')
```
# Examine the Naive Model Performance - Erosion Potential Prediction
# Determine the mean absolute error
```{r }
NaiveResponse = c(rep(ErPot_Naive,nrow(TstData)))
AbsDeviationNaive = abs(TstData$ErosionPotential - NaiveResponse)
MeanAbsDeviationNaive = mean(AbsDeviationNaive)
```
The Erosion Potential as predicted by the Naive model has a mean absolute deviation of `r MeanAbsDeviationNaive` from the true value.
The **Success Metric** required that this value be less than **0.05**. Hence the Naive model falls short of the success metric.
Need to explore additional models.
